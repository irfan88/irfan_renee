{"version":3,"sources":["Redux/blockchain/blockchainReducer.js","Redux/data/dataReducer.js","Redux/store.js","Redux/data/dataAction.js","Redux/blockchain/blockchainAction.js","Redux/global.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","ResponsiveWrapper","StyledButton","button","StyledRoundButton","StyledLink","img","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","className","style","padding","backgroundColor","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","to","bachMint","send","from","value","once","err","then","receipt","claimNFTs","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a47a211f.chunk.js","sourcesContent":["const initialState = {\r\n    loading: false,\r\n    account: null,\r\n    smartContract: null,\r\n    web3: null,\r\n    errorMsg: \"\",\r\n  };\r\n  \r\n  const blockchainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"CONNECTION_REQUEST\":\r\n        return {\r\n          ...initialState,\r\n          loading: true,\r\n        };\r\n      case \"CONNECTION_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          account: action.payload.account,\r\n          smartContract: action.payload.smartContract,\r\n          web3: action.payload.web3,\r\n        };\r\n      case \"CONNECTION_FAILED\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          errorMsg: action.payload,\r\n        };\r\n      case \"UPDATE_ACCOUNT\":\r\n        return {\r\n          ...state,\r\n          account: action.payload.account,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default blockchainReducer;","const initialState = {\r\n    loading: false,\r\n    totalSupply: 0,\r\n    cost: 0,\r\n    error: false,\r\n    errorMsg: \"\",\r\n  };\r\n  \r\n  const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"CHECK_DATA_REQUEST\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: false,\r\n          errorMsg: \"\",\r\n        };\r\n      case \"CHECK_DATA_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          totalSupply: action.payload.totalSupply,\r\n          // cost: action.payload.cost,\r\n          error: false,\r\n          errorMsg: \"\",\r\n        };\r\n      case \"CHECK_DATA_FAILED\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          error: true,\r\n          errorMsg: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default dataReducer;","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    blockchain: blockchainReducer,\r\n    data: dataReducer,\r\n  });\r\n  \r\n  const middleware = [thunk];\r\n  const composeEnhancers = compose(applyMiddleware(...middleware));\r\n  \r\n  const configureStore = () => {\r\n    return createStore(rootReducer, composeEnhancers);\r\n  };\r\n  \r\n  const store = configureStore();\r\n  \r\n  export default store;","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from '../data/dataAction';\r\n\r\nconst connectRequest = () => {\r\n    return {\r\n      type: \"CONNECTION_REQUEST\",\r\n    };\r\n  };\r\n  \r\n  const connectSuccess = (payload) => {\r\n    return {\r\n      type: \"CONNECTION_SUCCESS\",\r\n      payload: payload,\r\n    };\r\n  };\r\n  \r\n  const connectFailed = (payload) => {\r\n    return {\r\n      type: \"CONNECTION_FAILED\",\r\n      payload: payload,\r\n    };\r\n  };\r\n  \r\n  const updateAccountRequest = (payload) => {\r\n    return {\r\n      type: \"UPDATE_ACCOUNT\",\r\n      payload: payload,\r\n    };\r\n  };\r\n  \r\n  export const connect = () => {\r\n    return async (dispatch) => {\r\n      dispatch(connectRequest());\r\n      const abiResponse = await fetch(\"/config/abi.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const abi = await abiResponse.json();\r\n      const configResponse = await fetch(\"/config/config.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const CONFIG = await configResponse.json();\r\n      const { ethereum } = window;\r\n      const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n      if (metamaskIsInstalled) {\r\n        Web3EthContract.setProvider(ethereum);\r\n        let web3 = new Web3(ethereum);\r\n        try {\r\n          const accounts = await ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n          const networkId = await ethereum.request({\r\n            method: \"net_version\",\r\n          });\r\n          if (networkId == CONFIG.NETWORK.ID) {\r\n            const SmartContractObj = new Web3EthContract(\r\n              abi,\r\n              CONFIG.CONTRACT_ADDRESS\r\n            );\r\n            dispatch(\r\n              connectSuccess({\r\n                account: accounts[0],\r\n                smartContract: SmartContractObj,\r\n                web3: web3,\r\n              })\r\n            );\r\n            // Add listeners start\r\n            ethereum.on(\"accountsChanged\", (accounts) => {\r\n              dispatch(updateAccount(accounts[0]));\r\n            });\r\n            ethereum.on(\"chainChanged\", () => {\r\n              window.location.reload();\r\n            });\r\n            // Add listeners end\r\n          } else {\r\n            dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n          }\r\n        } catch (err) {\r\n          dispatch(connectFailed(\"Something went wrong.\"));\r\n        }\r\n      } else {\r\n        dispatch(connectFailed(\"Install Metamask.\"));\r\n      }\r\n    };\r\n  };\r\n  \r\n  export const updateAccount = (account) => {\r\n    return async (dispatch) => {\r\n      dispatch(updateAccountRequest({ account: account }));\r\n      dispatch(fetchData(account));\r\n    };\r\n  };","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: auto;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: auto;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;","import './App.css';\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from './Redux/blockchain/blockchainAction'\nimport { fetchData } from './Redux/data/dataAction';\nimport styled from \"styled-components\";\nimport * as s from './Redux/global';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    const to = blockchain.account;\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .bachMint(to, mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n       \n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          \n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n         \n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './Redux/store';\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}